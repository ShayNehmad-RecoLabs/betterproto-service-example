syntax="proto3";

package example.services.v1;

import "example/services/v1/common_enum.proto";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/rpc/status.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/shaynehmad-recolabs/betterproto-service-example/proto;reco";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/shaynehmad-recolabs/betterproto-service-example";
    description: "RecoLabs services repository";
  }
  schemes: HTTPS;
};

service SchmooserService {
  rpc AddSchmooser(AddSchmooserRequest) returns (AddSchmooserResponse) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      post: "/api/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a user"
      description: "Add a user to the server."
      tags: "Schmoosers"
    };
  }

  rpc ListSchmoosers(ListSchmoosersRequest) returns (ListSchmoosersResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users
      get: "/api/v1/users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List users"
      description: "List all users on the server."
      tags: "Schmoosers"
    };
  }

  rpc GetSchmooser(GetSchmooserRequest) returns (GetSchmooserResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a user"
      description: "Get a user based on their ID."
      tags: "Schmoosers"
    };
  }
}

message AddSchmooserRequest {
  string email_address = 1;
  repeated Schmooser.Role user_roles = 2;
}

message AddSchmooserResponse {  
  Schmooser user = 1;
}

message ListSchmoosersRequest {}
message ListSchmoosersResponse { repeated Schmooser users = 1; }

message Schmooser {
  string user_id = 1;

  /// Schmooser's personal info
  string email_address = 10;

  // Will be used for Role-based access control (RBAC).
  enum Role {
    ROLE_UNSPECIFIED = 0;
    // Access reports
    ROLE_VIEWER = 10;
    // Access data config
    ROLE_IT = 20;
    // Access RecoLabs config
    ROLE_ADMIN = 30;
    // Access everything
    ROLE_SUPER_ADMIN = 100;
  };
  /// Schmooser's system info
  repeated Role user_roles = 20;

  /// Schmooser metadata
  google.protobuf.Timestamp creation_time = 30;
  google.protobuf.Timestamp last_login_time = 31;
}

message GetSchmooserRequest { string user_id = 1; }
message GetSchmooserResponse { Schmooser user = 1; }
